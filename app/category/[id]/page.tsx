import React from 'react';
import styles from "./page.module.css";

import db from "@/services/db";
import type { M_Category, M_Restaurant } from '@/services/db/models/category';
import { shortRestaurant } from '@/features/restaurants/types';
import { RestaurantCard } from '@/features/restaurants';
import { Metadata, } from 'next';

type Props = {
	params: { id: string }
}

export async function generateMetadata({params }: Props) {
	return {
		title: `FEED ME | ${params.id}`,
		description: 'Generated by create next app',
	}
}

// export const metadata: Metadata = 

export default async function RestaurantPage({ params }: Props) {
	const { categoryData, restaurantsList } = await getPageData(params.id);

	return (
		<div className={styles.page}>
			{categoryData.name}

			<div className={styles.gridList}>
				{restaurantsList.map(item => <RestaurantCard restaurant={item} />)}
			</div>
		</div>
	)
}

const getPageData = async (categoryID: string) => {
	const [restaurantsCollection, categoriesCollection] = await Promise.all([db<M_Restaurant>("restaurants"), db<M_Category>("categories")]);

	const categoryData = await categoriesCollection.findOne({ slug: categoryID });
	if (!categoryData) throw new Error("category not found");

	const restaurantsList: shortRestaurant[] = await restaurantsCollection.find(
		{ category: categoryData._id },
		{
			projection: {
				name: 1,
				img: 1,
				slug: 1,
				rating: 1
			}
		}).toArray();

	return { categoryData, restaurantsList }

	// return { data, menuItems };
}
